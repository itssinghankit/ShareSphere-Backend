<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Socket Sender</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.2/socket.io.js"></script>
  </head>
  <body style="background-color: rgb(24, 245, 197)">
    <p id="heading" style="color: rgb(0, 0, 0); font-size: 20px; text-align: center">
      Socket testing
    </p>
    <span>Your ID is: </span>
    <span id="id"></span>

    <p style="color: red" id="error"></p>
    <p style="color: red" id="errorcode"></p>

    <script>
      const token = "YOUR_TOKEN_HERE"; // Replace with your actual token

      let socket;
      try {
        socket = io("https://share-sphere-backend.vercel.app", {
          transports: ['websocket'],
          auth: {
            token: token,
          },
        });
      } catch (error) {
        console.error("Error initializing socket:", error);
        document.getElementById("error").innerText = "Failed to initialize socket connection";
      }

      if (socket) {
        socket.on("connect", () => {
          console.log("Connected to server");
        });

        socket.on("connected", (data) => {
          document.getElementById("id").innerText = data;
          console.log("We are connected with ID:", data);
        });

        socket.on("connect_error", (error) => {
          console.error("Connection error:", error);
          document.getElementById("error").innerText = "Connection error: " + error.message;
        });

        socket.on("socket-error", (data) => {
          console.error("Socket error:", data);
          document.getElementById("error").innerText = data.errors?.message || "Unknown error";
          document.getElementById("errorcode").innerText = data.statusCode || "";
        });

        socket.on("message-received", (data) => {
          console.log("Message received:", data);
        });

        socket.on("new-chat", (data) => {
          console.log("New chat created:", data);
        });

        socket.on("disconnect", (reason) => {
          console.log("Disconnected:", reason);
        });
      }
    </script>
  </body>
</html>